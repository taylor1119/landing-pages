---
import Layout from '../layouts/Layout.astro'
---

<Layout title='Photographer'>
	<div class='loader'>
		<div class='counter'>
			<div class='digit-1'>
				<div class='num'>0</div>
				<div class='num'>1</div>
			</div>

			<div class='digit-2'>
				{
					Array.from({ length: 11 }).map((_, i) => (
						<div class='num'>{i === 10 ? 0 : i}</div>
					))
				}
			</div>

			<div class='digit-3'>
				{
					Array.from({ length: 11 }).map((_, i) => (
						<div class='num'>{i === 10 ? 0 : i}</div>
					))
				}
			</div>

			<div class='percent'>%</div>
		</div>

		<div class='progress-bar'></div>
	</div>

	<div class='background-images-container'>
		<div class='background-images'>
			<img src='/imgs/alina-levkovich-1.jpg' alt='alina levkovich 1' />
			<img src='/imgs/alina-levkovich-2.jpg' alt='alina levkovich 2' />
			<img src='/imgs/alina-levkovich-3.jpg' alt='alina levkovich 3' />
			<img src='/imgs/alina-levkovich-4.jpg' alt='alina levkovich 4' />
			<img src='/imgs/alina-levkovich-5.jpg' alt='alina levkovich 5' />
			<img src='/imgs/alina-levkovich-6.jpg' alt='alina levkovich 6' />
			<img src='/imgs/alina-levkovich-7.jpg' alt='alina levkovich 7' />
		</div>
	</div>

	<div class='content'>
		<nav>
			<div class='logo'><p>Logo</p></div>
			<div class='job-title'><p>Photographer</p></div>
			<div class='menu'><p>Menu</p></div>
		</nav>

		<h1 class='header'>
			{'RIYADH'.split('').map((letter) => <span>{letter}</span>)}
		</h1>
	</div>
</Layout>

<style>
	.loader {
		position: fixed;
		bottom: 0rem;
		right: 0rem;

		width: 200%;
		padding-right: 3rem;
		padding-bottom: 1rem;

		display: flex;
		align-items: end;
		justify-content: end;

		z-index: 10;
	}

	.counter {
		display: flex;

		font-size: 6rem;
		height: 8rem;
		text-align: right;
		clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
	}

	.progress-bar {
		width: 0;
		height: 0.5rem;
		border-radius: 1.5rem;
		margin-bottom: 0.75rem;
		background-color: #212121;
	}

	.background-images-container {
		position: fixed;
		top: 0;
		left: 0;

		width: 100svw;
		height: 100svh;
		padding: 4rem;

		z-index: -10;
	}

	.background-images {
		position: relative;
		top: 0;
		left: 0;

		width: 100%;
		height: 100%;
	}

	.background-images img {
		position: absolute;
		width: 100%;
		height: 100%;
		object-fit: cover;
		clip-path: polygon(100% 0%, 100% 0%, 100% 100%, 100% 100%);
	}

	.content {
		padding: 2rem;
		color: #ffc107;
		font-size: 2.5rem;
	}

	nav {
		display: flex;
		justify-content: space-between;

		font-size: 2.5rem;
		text-transform: uppercase;
	}

	.header {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		font-size: 10rem;
		font-weight: normal;
		letter-spacing: 2rem;
		text-transform: uppercase;
	}

	.hide {
		display: none;
	}
</style>

<script>
	import gsap from 'gsap'

	const digit1 = document.querySelector<HTMLDivElement>('.digit-1')
	const digit2 = document.querySelector<HTMLDivElement>('.digit-2')
	const digit3 = document.querySelector<HTMLDivElement>('.digit-3')

	animateDigit(digit1, 2, 5)
	animateDigit(digit2, 6, 1)
	animateDigit(digit3, 5, 1)
	animateProgressBar()
	animateBackgroundImages()

	function animateDigit(
		digitGrp: HTMLDivElement | null,
		duration: number,
		delay: number
	) {
		if (!digitGrp) return

		const digitHeight = digitGrp.querySelector('.num')?.clientHeight ?? 0
		const digitColHeight =
			(digitGrp.querySelectorAll('.num').length - 1) * digitHeight

		gsap.to(digitGrp, {
			y: -digitColHeight,
			duration,
			delay,
			ease: 'power2.inOut',
		})
	}

	function animateProgressBar() {
		gsap.to('.progress-bar', {
			width: '30%',
			duration: 2,
			ease: 'power4.inOut',
			delay: 7,
		})

		gsap.to('.progress-bar', {
			width: '100%',
			opacity: 0,
			duration: 2,
			delay: 8.5,
			ease: 'power3.out',
			onComplete: () => {
				document.querySelector('.loader')?.remove()
			},
		})
	}

	function animateBackgroundImages() {
		gsap.to('.background-images > img', {
			clipPath: 'polygon(100% 0%, 0% 0%, 0% 100%, 100% 100%)',
			duration: 1,
			ease: 'power4.inOut',
			stagger: 0.25,
			delay: 9,
		})

		gsap.to('.background-images', {
			scale: 1.25,
			duration: 3,
			ease: 'power3.inOut',
			delay: 9,
		})
	}
</script>
